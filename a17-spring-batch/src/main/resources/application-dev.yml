spring:

  application:
    name: a17-spring-boot-mybatis-plus

  #SpringBoot中会集成flyway的版本
  flyway:
    #开启自动创建flyway元数据表标识 默认: false
    #    baseline-on-migrate: true
    #如果数据库中已经存在数据，从基线版本之前的脚本不再执行
    #    enabled: true
    enabled: false #注册多数据源
  datasource:
    #    url: jdbc:mysql://localhost:3306/ax_test?serverTimezone=GMT%2B8&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true
    #    username: root
    #    password: 123456
    #    driver-class-name: com.mysql.cj.jdbc.Driver
    dynamic:
      primary: db_ax_main #设置默认的数据源或者数据源组,默认值即为master
      strict: false #无数据源启动，严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源
      lazy: true #默认false非懒启动，系统加载到数据源立即初始化连接池，缺点在于，如果参数配置有误，则启动的时候不知道，初始化的时候失败，可能一直抛异常。
      datasource:
        db_ax_main:
          url: jdbc:mysql://localhost:3306/ax_test?serverTimezone=GMT%2B8&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true
          username: root
          password: 123456
          driver-class-name: com.mysql.cj.jdbc.Driver

        db_ax_sub:
          url: jdbc:mysql://localhost:3306/ax_test2?serverTimezone=GMT%2B8&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true
          username: root
          password: 123456
          driver-class-name: com.mysql.cj.jdbc.Driver

  #        slave_2:
  #          url: ENC(xxxxx) # 内置加密,使用请查看详细文档
  #          username: ENC(xxxxx)
  #          password: ENC(xxxxx)
  #          driver-class-name: com.mysql.jdbc.Driver

  #    log颜色
  output:
    ansi:
      enabled: always

mybatis-plus:
  #枚举包,必须有
  type-enums-package: com.ax.a16.enums
  #  mapper-locations: classpath*:/mybatis/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  #  typeAliasesPackage: com.example.demo.model
  #  configuration:
  #开启下划线转驼峰
  #  map-underscore-to-camel-case: true
  #  #开启返回map结果集的下划线转驼峰
  #  object-wrapper-factory: com.baomidou.mybatisplus.extension.MybatisMapWrapperFactory
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启sql日志

logging:
  #  file:
  #    path:
  #  config: classpath:log4j2.xml
  #  file:
  #    name: log/myspringboot.log
  #    path: log
  level:
    com.ax.demo.mapper: debug
#  pattern:
#    console: '%clr(%d{HH:mm:ss}){yellow} [%clr(%thread){red}] %-5level --- %clr(%logger){green} | %msg%n'
