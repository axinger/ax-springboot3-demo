<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github.axinger</groupId>
        <artifactId>ax-springboot3-demo</artifactId>
        <version>2025.03.01-3.4</version>
    </parent>

    <artifactId>a33-docker-jar</artifactId>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.axinger</groupId>
            <artifactId>json-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.axinger</groupId>
            <artifactId>advice-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.axinger</groupId>
            <artifactId>doc-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

    </dependencies>


    <!--    <build>-->
    <!--        <plugins>-->
    <!--            <plugin>-->
    <!--                &lt;!&ndash;-->
    <!--                     https://juejin.cn/post/7291846601651273769-->
    <!--                    1. 加密后,方法体被清空,保留方法参数、注解等信息.主要兼容swagger文档注解扫描-->
    <!--                    2. 方法体被清空后,反编译只能看到方法名和注解,看不到方法体的具体内容-->
    <!--                    3. 加密后的项目需要设置javaagent来启动,启动过程中解密class,完全内存解密,不留下任何解密后的文件-->
    <!--                    4. 启动加密后的jar,生成xxx-encrypted.jar,这个就是加密后的jar文件,加密后不可直接执行-->
    <!--                    5. 无密码启动方式,java -javaagent:xxx-encrypted.jar -jar xxx-encrypted.jar-->
    <!--                    6. 有密码启动方式,java -javaagent:xxx-encrypted.jar='-pwd= 密码' -jar xxx-encrypted.jar-->
    <!--                &ndash;&gt;-->
    <!--                <groupId>net.roseboy</groupId>-->
    <!--                <artifactId>classfinal-maven-plugin</artifactId>-->
    <!--                <version>1.2.1</version>-->
    <!--                <configuration>-->
    <!--                    <password>#</password>&lt;!&ndash; #表示启动时不需要密码,事实上对于代码混淆来说,这个密码没什么用,它只是一个启动密码 &ndash;&gt;-->
    <!--                    <excludes>org.spring</excludes>-->
    <!--                    <packages>${groupId}</packages>&lt;!&ndash; 加密的包名,多个包用逗号分开 &ndash;&gt;-->
    <!--                    <cfgfiles>application.yml</cfgfiles>&lt;!&ndash; 加密的配置文件,多个包用逗号分开 &ndash;&gt;-->
    <!--&lt;!&ndash;                    <libjars>hutool-all.jar</libjars> &lt;!&ndash; jar包lib下面要加密的jar依赖文件,多个包用逗号分开 &ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;                    <code>xxxx</code> &lt;!&ndash; 指定机器启动,机器码 &ndash;&gt;&ndash;&gt;-->
    <!--                </configuration>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <phase>package</phase>-->
    <!--                        <goals>-->
    <!--                            <goal>classFinal</goal>-->
    <!--                        </goals>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--            </plugin>-->

    <!--            <plugin>-->
    <!--                <groupId>com.github.wvengen</groupId>-->
    <!--                <artifactId>proguard-maven-plugin</artifactId>-->
    <!--                <version>2.5.3</version>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <phase>package</phase>-->
    <!--                        <goals>-->
    <!--                            <goal>proguard</goal>-->
    <!--                        </goals>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--                <configuration>-->
    <!--                    <proguardVersion>7.2.1</proguardVersion>-->
    <!--                    <injar>${project.build.finalName}.jar</injar>-->
    <!--                    <outjar>${project.build.finalName}.jar</outjar>-->
    <!--                    <obfuscate>true</obfuscate>-->
    <!--                    <proguardInclude>${project.basedir}/proguard.cfg</proguardInclude>-->
    <!--                    <libs>-->
    <!--                        <lib>${java.home}/lib/rt.jar</lib>-->
    <!--                        <lib>${java.home}/lib/jce.jar</lib>-->
    <!--                    </libs>-->
    <!--                </configuration>-->
    <!--                <dependencies>-->
    <!--                    <dependency>-->
    <!--                        <groupId>com.guardsquare</groupId>-->
    <!--                        <artifactId>proguard-base</artifactId>-->
    <!--                        <version>7.2.1</version>-->
    <!--                    </dependency>-->
    <!--                </dependencies>-->
    <!--            </plugin>-->


    <!--            <plugin>-->
    <!--                <groupId>org.springframework.boot</groupId>-->
    <!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
    <!--            </plugin>-->
    <!--        </plugins>-->

    <!--    </build>-->


</project>
